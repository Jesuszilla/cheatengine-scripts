<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="31">
  <Forms>
    <MainWindow Class="TCEForm" Encoding="Ascii85">m6c6z):ZsvouqA(W/^G25+)1KN!$;OwcCN*nyqZ2([YAEohr96t-H+QVs}4:2VVkl.d;zM#DOn=.3MF=Hf.?Mmn444_Nna*KeoT;063lIj[%k.O(VO5-#_:GF;(d2p?lwj=NBKlBRm;(ZK]Mv[0^v?DR%i-J63fY]W#bIdf4m2tLNS3L9KcSIjq^$@U#pfV8iw;B0LkY.(v*f;5l3332]91Xuv:;7)ei=.f)1$%/#ZNCa=t7tAI{Z2EDQ7pD$vzpCDy3W43z/,Xp3ME42p]!Lms53oMYlQ;-Q;^8;Dz^w^Z5AO@!e!+JlB9k=h@0Wbtj3l5NHB:49+H4,T/K{4_]Q;fb,MDeWJL!K4OitNz9kf]lS*#_Hi:MuGW0gqhF[4t+Ly-c,p:gBlfG2SESwuv]0a^)3^bi,%@j=qP4m(1UoiYY!?h;QdPSTWg@n)X{3L_HWfizX_1sY(zVBzbw7/wd^!bhbV-H7Rsw4xOQ?cSo(DQMnBDKNhhrMfD{9,TBt2WT?H}kgz[/7jK8Mb.Y_cmAjS5olE4F0@gGbu6,iQ$O}(DU))*{YJZby7uRY7Q.0XFoKsSaCd3ER[w;,IA4Te}l[U,rEDc-H@y)poBSIO,L#DThIFyDLy2ZkwKF60R$ZedwnVEhh],TzKx1IX6GrzJ.^aMv,b;Gg7DkH?EbTH].:nZ1I!Uv!nt{kX;9JZDC1Wj78pZS-A[XjASaCDi#fUPzW:?LH,0)%U{2/e,lc)SMyxuJQkh?{zkN,WEoMrcM6cBX8c1-Ow0:!?Q5(4B1*vBzk5Awn^b8?(U.c!id)74]mNHd{MA=3Y{%q{NumJ*Cg.Dq?q/A=CBFr5[O{Cb**iLO2Sppr?7vY(;R7eHU]n7Z1205+HRhGLkC?QFDI*</MainWindow>
  </Forms>
  <Files>
    <atck.bmp Encoding="Ascii85">vteLhaPqZbfB-Wf*(OEgIF/m5vjMRXHv{WVe.?[]</atck.bmp>
    <axis.bmp Encoding="Ascii85">Tf?x2.N-goNP;VF5NiOjAQUq*NPxx5fbv4z5DWwVu;uAd!Xb%UcvKG[NrwN{)f_Lrq!?4,h7(N5Y0qf/P+*G0^KLQi00</axis.bmp>
    <axis.png Encoding="Ascii85">0W1sC@e77e0EtjeM-2*Z3IG5A4M_8uQUCw_5dZ*H5eNnV0028{NBRH(010qNS#tmY3ljhU3ljkVnw%H[018iOLqkwdXm50Hb7+gHAW1[+AaHVTW?(6=004N{ol_F2Q_T5x[ulkEONfA!OK)yY2q02Ii,}i7CMqEb5K4$4q1hEt!4XA81RKbphy#v{fQ%JUEDVYY+azexqK/;3h;FVl.d]TN+1Y%T(HlC5KIg3SowLsezz7VMNHbA2fDEZZ9ueS!$Hd0r/Ssyg3M6m/5D2qmA#=pB0RZ?ZJUlBRzz4nn0eI632mruMo4[y{hyM?iLYZ6vfP=_Sbdfkq2!Ip-KzfcsrT^:j0f3#DCQ_@Q1OQ.mV]Ad}P%QvpCx7PC0DztNnR?^MTa,Oc0iclpAQNSXL.z=z0IbheibVieFaQ+0OT.,/+ew7sNmph[0I.[Jz_Ig0vH%DS05DOAg))08djMd[BO]bKgqZ+oM*FrY?hh$n:PCdIc$u/1xg/G7fm.YIaR+mdE+;b)Nf#;:Hemu]nm^hXd6@k9fiw?]@UMGMppg_3.Dhu1c,L+4(dxTDwhmt^;c0m6B4T3W^@ifBa6kY6.dFk^^wy!E8h_=nfNlPwCGG?hUJIag[lst-4=wj5py{FI@KkfnJUm6Akh$5{/;chpO2k52Vaiv1^%68pz+qfj]F:e7[x0eu.v_7GU4cgg[}63K@h}83(yop+V%,ABNBp-7_NI?)BE)5zxmYR]/53cEjzpS[@D=C)i9)Vo#U.{JWa8f{]vX4TH2_/]J@[1=EvQ^%1NKWN5Lk4..]aam@1E-r*F:o8fM_o@(v+atKmA9bB;.eCNs?5?0A55SE;z01KgS3F07RgHDzHHt@uZV]zy:)[1;C[4^9rbOLL_h)LJ(d/WPluUU?5GELMVpKupKI3FVsLCG^8{4hLdm)F2Yr}4n1%W]e6v3!6;_e2=RmN2oqr.,K2(SidZ9#2p5?![#wea1QLrRAjyanQ6fu]HApd1ic{y}NFDM$asoMrTt;Q*JIDYsg8YWOM:[LvvQa)M47EeKs5csfMxqPQWOOl[j}1Yt(}mgIJ(ZP=:g[NY5897DL(q=^:okkx#B4Aw#:{CfI4lX1W6QB3tPHEh8n9NZ1G_a!W6!a71QLNozzH?4cS0ax9zjT0Oju6XNT=tjBs3A*2^#D=gi+pLB9o^}v=jU^]NSAvGBJl)NGv1P5_0xv5POJ2#5W]oi9/3cxsU:$v7{Ve64FM{Zc-!ZEUB9]NE#!P$:YOVvIjYoEFde$h2*+(!^jsM8^^GKTMC[GKyjq[Q^pI6%4$j)/q,jG/pyP#GC?[Nno]{Up.Qqyk6J;lp_):5QHQ7#G/BLe(4U)6OQo%%mD3t%7ijlsujq8T5#5y?PM6SE)#z;b:$GgN@mhymh82Uyh-WAnn-}WeXBl?Gub51x8Pkgy$5b#kG3%J.nGcz7Rah#vDtr{?$[kZAl[r%NDlb(2s-}+mstZ-}Rm*V5sa^iku0}ZeQ^$-#*RwDNs,}}lQyWufsXM5Ls%NNgR6nGCS@bFyS.I]jPeY[pps]:$yv864V.Qq{EFo)RtA:%fHN,.d(Dnf+D!Z8d9lMJ=s.QwlLo-S/SF:+^lx9B%/Ct.yoODhJ:P0L[@L}on6z=hGDI2CVOt};-Tx,V9mzG$oNUKq,N9).duI.CtroBbGS@I$wLB}obTqj3okIn[1:Tq5J-KPqt7EL]m@^y[eYo!}ZyF[:tZl}@.p1xjyo:k72-g(+{]W$@P^Z##J]lt0r3_I!U3=v5I49+xl#WitnJRL8],woCDUBf@[rD2s{m+IqwxzRkM*kcj+4}%KXT.n9.ZN[cJqb3F;Atp.r;P[yNQcbz0DW+G2J50yT%+}=B*_oY%Ju%lZ:bPu7+PGwBU_M*uEVih(xMfMQ/XWa#=zX(cg/3gTrC3#3U9)25ovkI-yREyY5vRFMlTNFi*?Q?8?wUmfska%h/:6);uC^HqePL%{7iYJ^uEXw:y[0;qeU1G,2MveW4yzqn9e#7PauhmNI@LSjobEq.#q@fxFK1ZK5YN}%/F+saDa2]:Q:8LAXBTI:bA$7Ui-{8u%PyBbE{I,1-N=P/N[6#cUEzAt@[]ouo5Jm:,pq36=rH9a,?H*epDCVMGjq[x$V1;!//UP2pOr9c-;iO5Lr.NcwdW%+V:s_ct:F*)rFW_LVec0^[C9i-/38g(H^LSdSzpXIz[-Y@%TL2@o=nIELw[UxWdC}q)Ez7[B;]sxiGe_ZTLSy_dVC=jjz2ovW%jb!=Lmy7xj[^^kAkg(/-x5XXvpl4ts)d4n9h.TX%2-?e)2WF2Vv%6i@F}lCxwTFSB5^1aEMqM)J[{bchTHKbKgYzM3zL{n]bdkIj:2BH7Y*.E@0j5H?Y.sKgKR+S/KZ}omfe1OB@^aDy{weY]*,8=emA=o#G4Qdl#55$X#%Gq0Ykeg^Ky(E*py^mOxC1PB?hCK?cja7K_nG6L%$!3VFgE!e:5c)KgYD+h5=?9!}N_DouKl=2*]Rc[hU%r7Y#SgeR$xyi5(D-J3d_7MgY-Z8AMNy*lE5k(tmhsv%92wrA;R:4N*wtYw9:^;5(Kw:W*+2gz%+kgNq,Eef[mrsz}!DAy[nvS)#iX1}pe$}l(,o-57m%)KedkT.y}pa1O:!V:,/wxxzkS1lb[:Dn/HIkG%*dD^x)6$LAXRtBs+xQezaZPib!=N@tse!V7oO;2Q)!ODWcwE:7E3snl]g=.PX+X;/TST9-MwPE@)of_$CiHfci,ZUG:f7mG8c.y=1Z[2-!,=2GbtHilv(t{qQ;E[-oo=8x/s,Z:M4sH$E,O!SdR/!N*[C=z-m)3^KyMwkvxud@4xV(Yj$/EC=KUAbt@i:v)Hty2hwPDxzZqe::d%X5E=A6.[y!ZV,$-diF0aZ:aX4Pf.N(B/,Kdy/Y;G,oWZC$NSZE?_#1JVQi2O_!*+SXZy9nw8iQjgXv;qid9AHM#b=^[T=HVsvcoW_lKa720J;GuiW[Z_(8,IEb4tl/aKA9fvQ9WQD@n)}?Pn@T)mTVh,fPs}2i+6QAR^72g#51ceSS$RtHRLN:D;4MXfXY$XCot2$@elGdkVB4a$d+??$-*awU?466l.nGF[i_0GMJI-A4xODQe,vO8ixL2C5I$v$-bm}0+lhaSfyPUh4uDM*mx$b)swR;jw:@LIm(fWCAdGQwi+43UlJ;9,YdT.l_[x0Zv-F_W;^m#p}+;?-It-MdXU-UrjLD?syht*q?^?mE[,/$7occAmp,)-8Yg?e!jk?b%cLj^kSkIRM*hU:a/J}:t!KXU!*^HH[DWX}p@7yhFD%dQs_FMjyd;)_cFn9-q@?_TmpZG5Hu;cHz6uiM7L#vZ:Ocr!6x@j7:r!FSwu9q+(x4@QNLAb%,TX!*]AQ[!dTlNpnf^^#b:@Za8oE!zM903c(XQcVB:dL.k:fP)-4]Tqa[faw4Lbua)];R/o;I,y=e7jKeZ#YO-C08;dsK}#9!=2/7Kz%UTPOm,YNGMTC;L%67Fx3FS*0oi65?svg?=4pZXVnf1[yh%,nrUb4wW*u#DZi)Vg9DAT5@4Vk0+=y9!mka.@0RR630H{8mCWSA:zyJUM07+qoM6N/$f(</axis.png>
    <push.bmp Encoding="Ascii85">vteLhaPqZbfB-Wf*(OEgIF/m5vjMRXHw44Me-Hrx</push.bmp>
    <vuln.bmp Encoding="Ascii85">vteLhaPqZbfB-Wf*(OEgIF/m5vjMRXHw44Le:rFE</vuln.bmp>
  </Files>
  <CheatEntries>
    <CheatEntry>
      <ID>33</ID>
      <Description>"Sound Test Num"</Description>
      <VariableType>2 Bytes</VariableType>
      <Address>007466A0</Address>
      <Offsets>
        <Offset>FF2F0C</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>32</ID>
      <Description>"Stage Select"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>007466A0</Address>
      <Offsets>
        <Offset>FF8100</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>28</ID>
      <Description>"Timer"</Description>
      <VariableType>Byte</VariableType>
      <Address>007466A0</Address>
      <Offsets>
        <Offset>FF8108</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>29</ID>
      <Description>"Timer (SFA3U)"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>007466a0</Address>
      <Offsets>
        <Offset>FF831F</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>30</ID>
      <Description>"Timer Ticks"</Description>
      <VariableType>Byte</VariableType>
      <Address>007466a0</Address>
      <Offsets>
        <Offset>FF810B</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>31</ID>
      <Description>"Rounds to Show"</Description>
      <VariableType>Byte</VariableType>
      <Address>007466a0</Address>
      <Offsets>
        <Offset>FF8109</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>34</ID>
      <Description>"Stage Version"</Description>
      <VariableType>Byte</VariableType>
      <Address>007466A0</Address>
      <Offsets>
        <Offset>FF8140</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>35</ID>
      <Description>"Matches Won"</Description>
      <VariableType>Byte</VariableType>
      <Address>007466A0</Address>
      <Offsets>
        <Offset>FF814E</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>122</ID>
      <Description>"P1"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>54</ID>
          <Description>"P1 Life"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF8452</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>53</ID>
          <Description>"P1 Life Recover"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF8450</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>137</ID>
          <Description>"P1 Power"</Description>
          <VariableType>Byte</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF850A</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>8</ID>
          <Description>"P1 Pal"</Description>
          <VariableType>Byte</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF840E</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>39</ID>
          <Description>"P1 Pos X"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF8410</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>37</ID>
          <Description>"P1 Pos X Flt"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF8412</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>36</ID>
          <Description>"P1 Pos Y"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF8414</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>38</ID>
          <Description>"P1 Pos Y Flt"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF8416</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>24</ID>
          <Description>"P1 Vel X"</Description>
          <VariableType>Byte</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF8440</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>23</ID>
          <Description>"P1 Vel X Flt (Vel Y Flt SFA3U)"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF8442</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>27</ID>
          <Description>"P1 Vel X Flt (SFA3U)"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF843E</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>25</ID>
          <Description>"P1 Vel Y"</Description>
          <VariableType>Byte</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF8444</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>26</ID>
          <Description>"P1 Vel Y Flt"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF8446</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>13</ID>
          <Description>"P1 Visible"</Description>
          <VariableType>Byte</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF841B</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>14</ID>
          <Description>"P1 Frame Val"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF841C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>15</ID>
          <Description>"P1 Frame Val 2"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>2 Bytes</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF841E</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>16</ID>
          <Description>"P1 Ticks"</Description>
          <VariableType>Byte</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF8421</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>17</ID>
          <Description>"P1 Ticks (SFA3)"</Description>
          <VariableType>Byte</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF8433</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>65</ID>
          <Description>"P1 Head Box Table Ptr"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF8480</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>66</ID>
          <Description>"P1 Body Box Table Ptr"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF8484</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>67</ID>
          <Description>"P1 Legs Box Table Ptr"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF8488</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>71</ID>
          <Description>"P1 Attack Box Table Ptr"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF848C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>134</ID>
          <Description>"P1 Attack ID"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF840A</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>69</ID>
          <Description>"P1 Box Offsets"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>Array of byte</VariableType>
          <ByteLength>4</ByteLength>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF8494</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>68</ID>
          <Description>"P1 Body Box Offset"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>Byte</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF8494</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>70</ID>
          <Description>"P1 Legs Box Offset"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>Byte</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF8497</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>128</ID>
          <Description>"P1 Head Box Table Ptr (SFA3)"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF8490</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>129</ID>
          <Description>"P1 Body Box Table Ptr (SFA3)"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF8494</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>130</ID>
          <Description>"P1 Legs Box Table Ptr (SFA3)"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF8498</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>131</ID>
          <Description>"P1 Attack Box Table Ptr (SFA3)"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF84A0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>132</ID>
          <Description>"P1 Box Offsets (SFA3)"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF84C8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>133</ID>
          <Description>"P1 Attack ID (SFA3)"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF8409</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>155</ID>
          <Description>"P1 Vel X (SFA3, PS2)"</Description>
          <LastState Value="59624" RealAddress="20908442"/>
          <VariableType>2 Bytes</VariableType>
          <Address>20908442</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>154</ID>
          <Description>"P1 Vel X Flt (SFA3, PS2)"</Description>
          <LastState Value="12800" RealAddress="20908440"/>
          <VariableType>2 Bytes</VariableType>
          <Address>20908440</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>158</ID>
          <Description>"P1 Box Offsets (SFA3, PS2)"</Description>
          <LastState Value="0B030000" RealAddress="209084C8"/>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>209084C8</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>123</ID>
      <Description>"P2"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>48</ID>
          <Description>"P2 Life"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF8852</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>47</ID>
          <Description>"P2 Life Recover"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF8850</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>138</ID>
          <Description>"P2 Power"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF890A</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>57</ID>
          <Description>"P2 Pal"</Description>
          <VariableType>Byte</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF880E</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>41</ID>
          <Description>"P2 Pos X"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF8810</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>42</ID>
          <Description>"P2 Pos X Flt"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF8812</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>43</ID>
          <Description>"P2 Pos Y"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF8814</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>44</ID>
          <Description>"P2 Pos Y Flt"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF8816</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>45</ID>
          <Description>"P2 Vel X"</Description>
          <VariableType>Byte</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF8840</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>46</ID>
          <Description>"P2 Vel X Flt"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF8842</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>51</ID>
          <Description>"P2 Vel Y"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Byte</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF8844</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>52</ID>
          <Description>"P2 Vel Y Flt"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF8846</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>58</ID>
          <Description>"P2 Visible"</Description>
          <VariableType>Byte</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF941B</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>59</ID>
          <Description>"P2 Frame Val"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF881C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>60</ID>
          <Description>"P2 Frame Val 2"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF881E</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>61</ID>
          <Description>"P2 Ticks"</Description>
          <VariableType>Byte</VariableType>
          <Address>007466A0</Address>
          <Offsets>
            <Offset>FF8821</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>49</ID>
      <Description>"P1 Proj Vel X"</Description>
      <VariableType>Byte</VariableType>
      <Address>007466A0</Address>
      <Offsets>
        <Offset>FF9440</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>50</ID>
      <Description>"P1 Proj Vel X Flt"</Description>
      <VariableType>2 Bytes</VariableType>
      <Address>007466A0</Address>
      <Offsets>
        <Offset>FF9442</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>55</ID>
      <Description>"P1 Proj Vel Y"</Description>
      <VariableType>Byte</VariableType>
      <Address>007466A0</Address>
      <Offsets>
        <Offset>FF9444</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>56</ID>
      <Description>"P1 Proj Vel Y Flt"</Description>
      <VariableType>2 Bytes</VariableType>
      <Address>007466A0</Address>
      <Offsets>
        <Offset>FF9446</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>62</ID>
      <Description>"No description"</Description>
      <LastState Value="158" RealAddress="2C600442"/>
      <VariableType>Byte</VariableType>
      <Address>2c600442</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>64</ID>
      <Description>"No description"</Description>
      <LastState Value="0000" RealAddress="20059A8C"/>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>2 Bytes</VariableType>
      <Address>20059A8C</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>72</ID>
      <Description>"Kawaks player space base"</Description>
      <ShowAsHex>1</ShowAsHex>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>4 Bytes</VariableType>
      <Address>007466A0</Address>
      <Offsets>
        <Offset>0</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>79</ID>
      <Description>"FBA P1 Vel X"</Description>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>4 Bytes</VariableType>
      <Address>7DB44F8</Address>
      <Offsets>
        <Offset>84</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>80</ID>
      <Description>"MAME P1 Vel X"</Description>
      <VariableType>Byte</VariableType>
      <Address>087DEF18</Address>
      <Offsets>
        <Offset>0</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>106</ID>
      <Description>"MAME Hitbox offset"</Description>
      <LastState Value="0100AD000200C201" RealAddress="0BFC35D4"/>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>8 Bytes</VariableType>
      <Address>0BFC35D4</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>107</ID>
      <Description>"MAME Hitbox Ptr"</Description>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>8 Bytes</VariableType>
      <Address>05D06260</Address>
      <Offsets>
        <Offset>A25B8</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>108</ID>
      <Description>"Kawaks Hitbox Start"</Description>
      <LastState Value="0000000000000000" RealAddress="02DF85CC"/>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>8 Bytes</VariableType>
      <Address>02DF85CC</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>110</ID>
      <Description>"No description"</Description>
      <LastState Value="0000000000000000" RealAddress="02DF85D8"/>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>8 Bytes</VariableType>
      <Address>02DF85D8</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>112</ID>
      <Description>"Kawaks Hitbox Table Start"</Description>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>4 Bytes</VariableType>
      <Address>0074E6E0</Address>
      <Offsets>
        <Offset>0</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>119</ID>
      <Description>"Kawaks Selected Game"</Description>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>String</VariableType>
      <Length>255</Length>
      <Unicode>0</Unicode>
      <CodePage>0</CodePage>
      <ZeroTerminate>1</ZeroTerminate>
      <Address>006C97D8</Address>
      <Offsets>
        <Offset>0</Offset>
        <Offset>0</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>120</ID>
      <Description>"No description"</Description>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>4 Bytes</VariableType>
      <Address>007466A0</Address>
      <Offsets>
        <Offset>FF84C8</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>121</ID>
      <Description>"No description"</Description>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>Byte</VariableType>
      <Address>007466A0</Address>
      <Offsets>
        <Offset>FF84C9</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>124</ID>
      <Description>"P1 Proj Base Addr"</Description>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>4 Bytes</VariableType>
      <Address>007466A0</Address>
      <Offsets>
        <Offset>FF9400</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>125</ID>
      <Description>"No description"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>007466A0</Address>
      <Offsets>
        <Offset>7466A0</Offset>
        <Offset>FF8480</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>126</ID>
      <Description>"No description"</Description>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>4 Bytes</VariableType>
      <Address>007466A0</Address>
      <Offsets>
        <Offset>A25B0</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>127</ID>
      <Description>"No description"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>007466A0</Address>
      <Offsets>
        <Offset>3912BD7</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>135</ID>
      <Description>"Juggle Timer"</Description>
      <VariableType>2 Bytes</VariableType>
      <Address>007466A0</Address>
      <Offsets>
        <Offset>FF89A5</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>139</ID>
      <Description>"No description"</Description>
      <LastState Value="0000050E0000050B" RealAddress="0A389DB4"/>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>8 Bytes</VariableType>
      <Address>0A389DB4</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>140</ID>
      <Description>"No description"</Description>
      <LastState Value="0000038D0000038C" RealAddress="0A38B4B8"/>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>8 Bytes</VariableType>
      <Address>0A38B4B8</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>141</ID>
      <Description>"No description"</Description>
      <LastState Value="00000A4800000A45" RealAddress="0A39042C"/>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>8 Bytes</VariableType>
      <Address>0A39042C</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>142</ID>
      <Description>"No description"</Description>
      <LastState Value="5DE58BFFF7BE37E8" RealAddress="0B0EDDB4"/>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>8 Bytes</VariableType>
      <Address>0B0EDDB4</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>143</ID>
      <Description>"No description"</Description>
      <LastState Value="00000B6800000B65" RealAddress="0A3A186C"/>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>8 Bytes</VariableType>
      <Address>0A3A186C</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>144</ID>
      <Description>"No description"</Description>
      <LastState Value="5DE58BFFF7BE37E8" RealAddress="0B0EDDB4"/>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>8 Bytes</VariableType>
      <Address>0B0EDDB4</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>145</ID>
      <Description>"No description"</Description>
      <LastState Value="83F0458939048D00" RealAddress="0B0EF4B8"/>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>8 Bytes</VariableType>
      <Address>0B0EF4B8</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>146</ID>
      <Description>"No description"</Description>
      <LastState Value="708B078B3F8B5633" RealAddress="0B0F442C"/>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>8 Bytes</VariableType>
      <Address>0B0F442C</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>147</ID>
      <Description>"No description"</Description>
      <LastState Value="AC15FFCF8B0C788B" RealAddress="0B10586C"/>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>8 Bytes</VariableType>
      <Address>0B10586C</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>148</ID>
      <Description>"No description"</Description>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>4 Bytes</VariableType>
      <Address>007466A0</Address>
      <Offsets>
        <Offset>10647E</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>149</ID>
      <Description>"No description"</Description>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>8 Bytes</VariableType>
      <Address>0074E6E0</Address>
      <Offsets>
        <Offset>10647E</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>152</ID>
      <Description>"Frames Drawn"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>007466A0</Address>
      <Offsets>
        <Offset>FF80B5</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>153</ID>
      <Description>"Camera X"</Description>
      <VariableType>2 Bytes</VariableType>
      <Address>007466A0</Address>
      <Offsets>
        <Offset>FF82A0</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>157</ID>
      <Description>"PCSX2 Game ID"</Description>
      <LastState RealAddress="03A0A0E2"/>
      <VariableType>String</VariableType>
      <Length>11</Length>
      <Unicode>0</Unicode>
      <CodePage>0</CodePage>
      <ZeroTerminate>1</ZeroTerminate>
      <Address>pcsx2.exe+2C1A0E2</Address>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <LuaScript>-- Prints the data into a form.
-- By Jesuszilla
-- http://www.trinitymugen.net

local HITBOX_VULNERABILITY  = 0
local HITBOX_ATTACK         = 1
local HITBOX_PUSH           = 2
local player1     = {
    name = "Player 1",
    addr = 0xFF8400
}
local player2     = {
    name = "Player 2",
    addr = 0xFF8800
}
local proj0       = {
    name = "P1 Proj 0",
    addr = 0xFF9400
}
selectedObj = player1  -- default
local dataInitialized = false

terminateThread = false -- thread terminate variable
hitboxForm = nil

-- Direct3D hook
local emuScreen

---------------
-- Variables --
---------------
aalist = getAutoAttachList()
stringlist_add(aalist,"WinKawaks.exe")
stringlist_add(aalist,"pcsx2.exe")
stringlist_add(aalist,"demul.exe")
sfa3Mode = false
addressList = getAddressList()
base = 0
emuBase = {
    kawaks = 0x007466A0,    -- Kawaks 1.62
    demul  = 0x20000000,    -- DEmul 0.57
    pcsx2  = 0x20000000     -- PCXS2 1.5.0 dev
}
boxBase = {
    kawaks = 0x0074E6E0,    -- Kawaks 1.62
    demul  = 0x20000000,    -- DEmul 0.57
    pcsx2  = 0x20000000     -- PCXS2 1.5.0 dev
}
game = {
    numProj     = 32,
    vulnStart   = 0x80,     -- VSav default, 0x90 for SFA3
    atckStart   = 0x8C,     -- VSav default, 0xA0 for SFA3
    projStart   = 0xFF9400,
    projOffset  = 0x100,
    offset      = 0x00,     -- VSav default, 0x34 for SFA3
    base        = 0x00,
    shift       = 0x03,
    atckID      = 0x0A,     -- VSav default, 0x09 for SFA3
    anim        = 0x1C,
    posX        = 0x10,
    posXFlt     = 0x12,
    posY        = 0x14,
    posYFlt     = 0x16,
    velX        = 0x40,
    velXFlt     = 0x42,     -- VSav/SFA3 default, 0x3E for SFA3U (SS/PSX/DC/PSP)
    velY        = 0x44,
    velYFlt     = 0x46,     -- VSav/SFA3 default, 0x42 for SFA3U (SS/PSX/DC/PSP)
    cameraX     = 0x20,
    cameraY     = 0x24
}

-- In case user refreshes script
if getOpenedProcessID() ~= nil then
    onOpenProcess(getOpenedProcessID())
end

---------------
-- Functions --
---------------

-- Game watchdog timer tick
function check_name(sender)
    if addressList == nil then return end
    -- Kawaks game detection
    gameName = addressList.getMemoryRecordByDescription("Kawaks Selected Game").getValue()
    if gameName ~= nil then
      if gameName:match("Street Fighter Alpha 3") or gameName:match("Street Fighter Zero 3") then --and not sfa3Mode then
        sfa3Mode = true
        game.vulnStart = 0x90
        game.atckStart = 0xA0
        game.offset = 0x34
        game.actkID = 0x09
        if getOpenedProcessID() ~= nil then
          onOpenProcess(getOpenedProcessID())
        end
      elseif gameName:match("Vampire Savior") or gameName:match("Vampire Hunter 2") then --and sfa3Mode then
        sfa3Mode = false
        game.vulnStart = 0x80
        game.atckStart = 0x8C
        game.offset = 0x00
        game.atckId = 0x0A
        if getOpenedProcessID() ~= nil then
          onOpenProcess(getOpenedProcessID())
        end
      else
        sfa3Mode = false
      end
    else
      gameName = addressList.getMemoryRecordByDescription("PCSX2 Game ID").getValue()
      if gameName:match("SLPM_659.98")
        sfa3Mode = false
        game.vulnStart = 0x80
        game.atckStart = 0x8C
        game.offset = 0x00
        game.atckId = 0x0A
        if getOpenedProcessID() ~= nil then
          onOpenProcess(getOpenedProcessID())
        end
      elseif gameName:match("SLPM_664.09")
      end
    end
end

-- Proj timer tick
function check_proj(sender)
    local mainForm = sender.getOwner()
    if mainForm == nil then return end
    local objList = mainForm.findComponentByName("ObjectListBox")
    if objList == nil then return end
    local i=0
    for _,v in spairs(objects, compare_numeric_names) do
        if v['name']:match("Proj") and isActive(v) == true then
            objList.Items[i] = v['name'] .. " (ACTIVE)"
        elseif objList.Items[i]:match("ACT") then
            objList.Items[i] = v['name']
        end
        i = i+1
    end
end

-- Function to convert a signed byte to integer values
function signed_byte_to_int(value)
    if bAnd(value,128) &gt; 0 then
        return value-256
    else
        return value
    end
end

-- Function to convert a signed short to integer values
function signed_short_to_int(value)
    if bAnd(value,32768) &gt; 0 then
        return value-65536
    else
        return value
    end
end

-- Function to read shorts
function readShort(addr, signed)
    local a = readBytes(addr, 1, false)
    local b = readBytes(addr+1, 1, false)
    local retVal = bOr(bShl(b,8),a)
    if signed and bAnd(128,b) &gt; 0 then
        return signed_short_to_int(retVal)
    else
        return retVal
    end
end

-- Reads a single byte, no bullshit
function readByte(addr)
   return readBytes(addr, 1, false)
end

-- Counts the number of elements in a table
function count(t)
    if t == nil then
        return 0
    end

    local i = 0
    for _ in pairs(t) do
        i = i+1
    end
    return i
end

-- Determines whether or not a projectile is active. Thanks, Dammit!
function isActive(obj)
    if selectedObj == nil then return end
    if readInteger(game.base + obj.addr) &gt; 0x0100 and readByte(game.base + obj.addr + 0x06) == 0x02 then
	    return true
    end
end

-- Iterates over a table in a sorted order
-- taken from http://stackoverflow.com/questions/15706270/sort-a-table-in-lua
function spairs(t, order)
    -- collect the keys
    local keys = {}
    for k in pairs(t) do keys[#keys+1] = k end

    -- if order function given, sort by it by passing the table and keys a, b,
    -- otherwise just sort the keys
    if order then
        table.sort(keys, function(a,b) return order(t, a, b) end)
    else
        table.sort(keys)
    end

    -- return the iterator function
    local i = 0
    return function()
        i = i + 1
        if keys[i] then
            return keys[i], t[keys[i]]
        end
    end
end

-- Compares the names
function compare_numeric_names(t, a,b)
    local x = tonumber(t[a]['name']:match("%d+"))
    local y = tonumber(t[b]['name']:match("%d+"))

    if t[a]['name']:find("Player") ~= nil and t[b]['name']:find("Player") ~= nil then
       return x &lt; y
    elseif t[a]['name']:find("Player") ~= nil then
        return true
    elseif t[b]['name']:find("Player") ~= nil then
        return false
    else
        local x = tonumber(t[a]['name']:match("%d+"))
        local y = tonumber(t[b]['name']:match("%d+"))
        return x &lt; y
    end
end

---------------
--   Main    --
---------------

-- Select the correct bases based on the process that was attached
function onOpenProcess(processid)
    --print("THAT'S THE SOUND OF THE POLICE")
    -- Kawaks hitbox base
    if getProcessIDFromProcessName("WinKawaks.exe") == processid then
        game.base = readInteger(emuBase.kawaks)
        base = readInteger(boxBase.kawaks)
    -- MAME-rr hitbox base
    elseif getProcessIDFromProcessName("mame.exe") == processid or getProcessIDFromProcessName("mame-rr.exe") == processid then
        game.base = readInteger(emuBase.mamerr)
        base = readInteger(boxBase.mamerr)
    -- DEmul hitbox base
    elseif getProcessIDFromProcessName("demul.exe") == processid then
        game.base = readInteger(emuBase.demul)
        base = readInteger(boxBase.demul)
        -- Create the direct3D hook
        --if emuScreen == nil then
        --    emuScreen = createD3DHook()
        --end
    end
    --print(string.format("base = 0x%X", base))
end

-- Updates the velocity boxes
function update_data(Thread, form)
    if getOpenedProcessID() &gt; 0 then
        while not terminateThread do
            if form == nil then return end
            -- Initialize the list of objects
            if not dataInitialized then
                check_name(form)
                local objList = form.findComponentByName("ObjectListBox")
                initialize_data(objList)
            else
                -- Update the selected object's data
                synchronize(check_proj, form)
                synchronize(update_obj_data, form)
                synchronize(display_hitboxes, hitboxForm)
            end
            nextFrame = get_frames_drawn()
            while nextFrame == currFrame do nextFrame = get_frames_drawn() end
            currFrame = nextFrame
        end
    end
end

-- Updates P1's data and puts them in the proper boxes
function update_obj_data(mainForm)
    if selectedObj == nil or not dataInitialized then return end
    -- Address list &amp; form components
    local xVelBox = mainForm.findComponentByName("CEEdit1")
    local yVelBox = mainForm.findComponentByName("CEEdit2")
    local deltaXVelBox = mainForm.findComponentByName("CEEdit3")
    local deltaYVelBox = mainForm.findComponentByName("CEEdit4")
    local xPosBox = mainForm.findComponentByName("CEEdit5")
    local yPosBox = mainForm.findComponentByName("CEEdit6")

    -- Previous velocities
    prevVelX = tonumber(xVelBox.Text)
    prevVelY = tonumber(yVelBox.Text)

    -- Update the velocities
    --print(string.format("velXInt = 0x%X", game.base + obj.addr + game.velX))
    local velXInt = signed_short_to_int(readShort(game.base + selectedObj.addr + game.velX))
    local velYInt = signed_short_to_int(readShort(game.base + selectedObj.addr + game.velY))
    velX = velXInt + (readShort(game.base + selectedObj.addr + game.velXFlt) / 65536.0)
    velY = - (velYInt + (readShort(game.base + selectedObj.addr + game.velYFlt) / 65536.0))

    -- Update the positions
    local posXInt = signed_short_to_int(readShort(game.base + selectedObj.addr + game.posX))
    local posYInt = signed_short_to_int(readShort(game.base + selectedObj.addr + game.posY))
    posX = posXInt + (readShort(game.base + selectedObj.addr + game.posXFlt) / 65536.0)
    posY = - (posYInt + (readShort(game.base + selectedObj.addr + game.posYFlt) / 65536.0))

    -- Deltas
    deltaVelX = velX - prevVelX
    deltaVelY = velY - prevVelY

    -- Update the boxes
    xVelBox.Text = velX
    yVelBox.Text = velY
    if not (velX == prevVelX) then
       deltaXVelBox.Text = velX - prevVelX
    end
    if not (velY == prevVelY) then
       deltaYVelBox.Text = velY - prevVelY
    end
    xPosBox.Text = posX
    yPosBox.Text = posY
end

function start_timer(sender)
    local owner = sender.getOwner()
    local vt = owner.findComponentByName("VelocityTimer")
    local tb = owner.findComponentByName("HBVActive")
    timer_setEnabled(vt, true)
    if tb:getState() == 0 then
        hitboxForm = createForm(false)
        hitboxForm.Width = 640
        hitboxForm.Height = 325
        hitboxForm.Top = 89
        hitboxForm.Left = 915
        hitboxForm.Caption = "Hitbox Viewer"
        hitboxForm.OnDestroy = function(sender) tb:setState(0) end
        form_show(hitboxForm)
        --registerFormAddNotification(add_form_features(hitboxForm))
        tb:setState(1)
    end

    -- Start the thread for getting data
    terminateThread = false
    createNativeThread(update_data, owner)
end

-- Gets the specified hitbox coordinates
function get_obj_data(sender, obj)
    if obj == nil or game.base == 0 then return end

    -- Are we copying CLSN?
    local copyingCLSN = false
    if sender ~= nil then
        if sender.Caption ~= nil and sender.Caption:match("Copy CLSNs") then
           copyingCLSN = true
        end
    end

    --print(string.format("headBoxTable = 0x%x", game.base + selectedObj.addr + game.vulnStart))
    local baseAddr = game.base + selectedObj.addr
    local headBoxTable = readInteger(baseAddr + game.vulnStart + 0x0)
    local bodyBoxTable = readInteger(baseAddr + game.vulnStart + 0x4)
    local legsBoxTable = readInteger(baseAddr + game.vulnStart + 0x8)
    local pushBoxTable = readInteger(baseAddr + game.vulnStart + 0x10)--0x10 or 0xC and sfa3Mode)
    local atckBoxTable = readInteger(baseAddr + game.atckStart)
    local animPtr = readInteger(baseAddr + game.anim)
    --print(string.format("legsBoxTable = 0x%X", legsBoxTable))
    --local animPtr = addressList.getMemoryRecordByDescription("P1 Frame Val").getValue()

    --if isActive(obj) then
        -- Head box
        --print(string.format("headBoxTable = 0x%X", headBoxTable))
        local headBoxOffset = readByte(baseAddr + game.offset + 0x95)
        local hbOff = bShl(headBoxOffset, game.shift)
        --print("headBoxOffset = " .. headBoxOffset)

        -- Body box
        local bodyBoxOffset = readByte(baseAddr + game.offset + 0x94)
        local bbOff = bShl(bodyBoxOffset, game.shift)
        --print("bodyBoxOffset = " .. bodyBoxOffset)

        -- Push box
        local pushBoxOffset = readByte(baseAddr + game.offset + 0x96)
        local pbOff = bShl(pushBoxOffset, game.shift)
        --print("legsBoxOffset = " .. pushBoxOffset)

        -- Legs box
        local legsBoxOffset = readByte(baseAddr + game.offset + 0x97)
        local lbOff = bShl(legsBoxOffset, game.shift)
        --print("legsBoxOffset = " .. legsBoxOffset)

        -- Load the damn hitboxes
        selectedObj[HITBOX_VULNERABILITY] = {}
        hitbox_load(selectedObj, 0, HITBOX_VULNERABILITY, word_swap(headBoxTable) + hbOff)
        hitbox_load(selectedObj, 1, HITBOX_VULNERABILITY, word_swap(bodyBoxTable) + bbOff)
        hitbox_load(selectedObj, 2, HITBOX_VULNERABILITY, word_swap(legsBoxTable) + lbOff)
        hitbox_load(selectedObj, 0, HITBOX_PUSH, word_swap(pushBoxTable) + pbOff)

        -- Load the damn attack box
        selectedObj[HITBOX_ATTACK] = {}
        local atckBoxOffset = word_swap(animPtr)
        atckBoxOffset = atckBoxOffset + game.atckID
        --print(string.format("base+atckBoxOffset = 0x%X", atckBoxOffset))
        local abOff = readByte(base + atckBoxOffset - (sfa3Mode and 2 or -1))
        --print(string.format("abOff addr = 0x%X", base + atckBoxOffset - (sfa3Mode and 2 or -1)))
        if abOff then
            hitbox_load(selectedObj, 0, HITBOX_ATTACK, word_swap(atckBoxTable) + abOff*0x20)
        end

        -- Copy them to clipboard
        local clsn2 = convert_to_air(selectedObj, HITBOX_VULNERABILITY)
        local clsn1 = convert_to_air(selectedObj, HITBOX_ATTACK)

        if copyingCLSN then
            if clsn1 == "" then
                writeToClipboard(clsn2)
            else
                writeToClipboard(clsn2 .. "\n" .. clsn1)
            end
        end
    --end
end

-- Gets the pushbox data
function get_obj_push(sender)
    local baseAddr = game.base + selectedObj.addr
    local pushBoxTable = readInteger(baseAddr + game.vulnStart + 0x10 or sfa3Mode and 0xC)

    -- Push box
    local pushBoxOffset = readByte(baseAddr + game.offset + 0x96)
    local pbOff = bShl(pushBoxOffset, game.shift)

    hitbox_load(selectedObj, 0, HITBOX_PUSH, word_swap(pushBoxTable) + pbOff)

    writeToClipboard(convert_to_air(selectedObj, HITBOX_PUSH))
end

-- Converts the pushbox to width/height coordinates
function convert_to_mugen(obj, type)
   local box = obj[type]
   return string.format("width.back = %d\nwidth.front = %d\nheight.bottom=%d,height.top=%d",
                         box.left, box.right, box.bottom, box.top)
end

-- Converts hitboxes to .AIR syntax
function convert_to_air(obj, type)
    local boxes = obj[type]
    local clsnBase = ""
    local clsnStr = ""
    local clsnCount = count(boxes)

    -- If there are no CLSNs, return an empty string
    if clsnCount == 0 then
        return ""
    end

    -- There can be only one attack box at any given moment
    if type == HITBOX_ATTACK or type == HITBOX_PUSH then
        clsnCount = 1
    end

    if type == HITBOX_VULNERABILITY then
        clsnBase = "Clsn2"
    elseif type == HITBOX_ATTACK then
        clsnBase = "Clsn1"
    elseif type == HITBOX_PUSH then
        clsnBase = "Clsn0"
    end

    clsnsStr = ""
    boxNo = 0
    for i=0,clsnCount-1 do
        local box
        if type == HITBOX_ATTACK or type == HITBOX_PUSH then box = boxes else box = boxes[i] end
        if box ~= nil then
            local coords = ""
            if box.left == 0 and box.top == 0 and box.right == 0 and box.bottom == 0 then
                clsnCount = clsnCount - 1
            else
                coords = string.format("%d,%d,%d,%d", box.left, box.top, box.right, box.bottom)
                clsnsStr = clsnsStr .. string.format("\n  %s[%d] = ", clsnBase, boxNo) .. coords
                boxNo = boxNo + 1
            end
        end
    end

    if clsnCount == 0 then
        return ""
    else
        clsnStr = clsnBase .. ": " .. clsnCount
        return clsnStr .. clsnsStr
    end
end

-- Swaps 16-bit words.
function word_swap(input)
    local front = bAnd(input, 0xFFFF)
    local back = bAnd(input, 0xFFFF0000)
    local newBack = bShl(front, 16)
    local newFront = bShr(back, 16)
    return bOr(newFront, newBack)
end

-- Thanks, Dammit!
function hitbox_load(obj, i, type, addr)
    local addrBase = base + addr
	local hval    = readShort(addrBase + 0, true)
	local vval    = readShort(addrBase + 2, true)
	local hrad    = readShort(addrBase + 4, true)
	local vrad    = readShort(addrBase + 6, true)
    local debug = string.format("hval = 0x%X, vval = 0x%X, hrad = 0x%X, vrad = 0x%X", hval,vval,hrad,vrad)
    --print(string.format("addr = 0x%X", addr))
    --print(string.format("addrDec = 0x%X", tonumber(addrDec) + 2))
    --print(debug)

	local left   = - (hval + hrad)
	local top    = - (vval + vrad)
	local right  = - (hval - hrad)
	local bottom = - (vval - vrad)

	if type == HITBOX_VULNERABILITY then
		obj[HITBOX_VULNERABILITY][i] = {
			left   = left,
			right  = right,
			bottom = bottom,
			top    = top,
			hval   = hval,
			vval   = vval,
			type   = type
		}
	else
		obj[type] = {
			left   = left,
			right  = right,
			bottom = bottom,
			top    = top,
			hval   = hval,
			vval   = vval,
			type   = type
		}
	end
end

-- Switches between SFA3 and VSav
function change_toggle_mode(sender)
    sfa3Mode = not sfa3Mode
    if sfa3Mode then
        sender.Caption = "VSav/SFA3"
    else
        sender.Caption = "SFA3U"
    end
end

-- Populate the listbox
function initialize_data(listbox)
    dataInitialized = true
    local listItems = {}
    listbox.items.clear()
    objects = {player1, player2}
    -- Allocate the object list with the number of projectiles
    for i=0,game.numProj do
        local n = "Projectile " .. i
        objects[i+3] = {name = string.format("Projectile %d", i),
                        addr = game.projStart+(game.projOffset*i)
    }
    end
    for k,v in spairs(objects, compare_numeric_names) do
        listbox.items.add(objects[k]['name'])
    end
    selectedObj = objects[0]
end

function set_selected_obj(sender, user)
    for _,v in pairs(objects) do
        if v['name'] == sender.Items[sender.getItemIndex()] then
            selectedObj = v
            break
        end
    end
end

-- Displays the hitboxes in the window
function display_hitboxes(sender)
    if sender == nil then return end
    local c = sender.getCanvas()
    c:clear()

    -- Canvas centers
    local centerX = c:getWidth()/2.0
    local centerY = c:getHeight()/2.0

    -- Canvas offsets
    local offsetX = -128
    local offsetY = 64

    local center = {x = centerX+offsetX, y = centerY+offsetY}

    -- Draw axes
    c:getPen():setColor(0x000000)
    c:line(center.x-8,center.y, center.x+9,center.y)
    c:line(center.x,center.y-8, center.x,center.y+10)

    -- Do nothing if nothing is selected
    if selectedObj == nil then return end

    get_obj_boxes(sender)

    local boxes = selectedObj[HITBOX_VULNERABILITY]
    local clsnCount = count(boxes)

    -- Draw the damn push box
    box = selectedObj[HITBOX_PUSH]
    if box ~= nil then
        draw_hitbox(center, box, c)
    end

    -- Draw the damn vulnerability boxes
    for i=0,clsnCount-1 do
        box = boxes[i]
        if box ~= nil and next(box) ~= nil then
            draw_hitbox(center, box, c)
        end
    end

    -- Draw the damn attack box
    box = selectedObj[HITBOX_ATTACK]
    if box ~= nil then
        draw_hitbox(center, box, c)
    end

    return clsnStr
end

-- Draws to the hitbox window
function draw_hitbox(axis, box, canvas)
    if axis == nil or box == nil or canvas == nil then return end
    if axis.x == nil or axis.y == nil then return end
    if box.left == nil or box.right == nil or box.top == nil or box.bottom == nil then return end
    local left   = axis.x + box.left
    local right  = axis.x + box.right
    local top    = axis.y + box.top
    local bottom = axis.y + box.bottom

    local color = box.type == HITBOX_ATTACK and 0x0000FF or box.type == HITBOX_PUSH and 0x00FF00 or 0xFF0000

    draw_rect(canvas, left,top, right,bottom, color)
end

-- Draws in the actual game window
function draw_hitbox(spr, obj, box, offsetX, offsetY, alpha)
    if box == nil then return end
    if box.left == nil or box.right == nil or box.top == nil or box.bottom == nil then return end
    if spr ~= nil then
        flip = readByte(game.base + obj.addr + game.flip)
        width = math.ceil((box.right - box.left + 1)*xScale)
        height = math.ceil((1 + math.abs(box.top - box.bottom))*yScale)
        -- Now do the sprite crap
        spr.Alphablend = alpha

        -- DO THE FLIP
        if flip == 1 then
           spr.X = (180 + offsetCFJ - offsetX + obj.posXInt)*posXScale + box.left*xScale
        else
           spr.X = (180 + offsetCFJ - offsetX + obj.posXInt)*posXScale - box.right*xScale
        end

        spr.Y = (203 + offsetY - obj.posYInt + box.top)*yScale + stageOffset
        spr.Width  = width
        spr.Height = height
    end
end

function draw_rect(canvas, left, top, right, bottom, color)
    canvas:getPen():setColor(color)
    canvas:line(left,top, right,top)
    canvas:line(left,top, left,bottom)
    canvas:line(right,top, right,bottom+1)
    canvas:line(left,bottom, right,bottom)
end

function get_frames_drawn()
    return readInteger(game.base + 0xFF80B5)
end

function get_obj_boxes(sender)
    if selectedObj == nil then return end
    get_obj_data(sender, selectedObj)
end
</LuaScript>
  <DisassemblerComments>
    <DisassemblerComment>
      <Address>303FF339</Address>
      <Comment>Throw Box Address
</Comment>
    </DisassemblerComment>
  </DisassemblerComments>
</CheatTable>
